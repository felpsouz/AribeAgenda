import { doc, getDoc, setDoc } from 'firebase/firestore';
import { db } from './config';

// 0 = admin, 1 = user
export type UserRole = 0 | 1;

export interface UserData {
  email: string;
  role: UserRole;
  createdAt: Date;
}

// Buscar role do usu√°rio
export const buscarRoleUsuario = async (uid: string): Promise<UserRole> => {
  console.log('üîç Buscando role para UID:', uid);
  
  try {
    const userDoc = await getDoc(doc(db, 'usuarios', uid));
    
    console.log('üìã Documento existe?', userDoc.exists());
    
    if (userDoc.exists()) {
      const userData = userDoc.data();
      console.log('üìÑ Dados do documento:', userData);
      console.log('üéØ Role encontrada:', userData.role);
      console.log('üî¢ Tipo da role:', typeof userData.role);
      
      return userData.role as UserRole;
    }
    
    console.log('‚ö†Ô∏è Documento n√£o existe, retornando role padr√£o: 1');
    // Se n√£o existe, retorna 1 (user) por padr√£o
    return 1;
  } catch (error) {
    console.error('‚ùå Erro ao buscar role do usu√°rio:', error);
    return 1; // Por padr√£o, retorna user
  }
};

// Criar ou atualizar dados do usu√°rio no Firestore
export const criarDadosUsuario = async (
  uid: string, 
  email: string, 
  role: UserRole = 1
): Promise<boolean> => {
  try {
    await setDoc(doc(db, 'usuarios', uid), {
      email,
      role,
      createdAt: new Date()
    });
    return true;
  } catch (error) {
    console.error('Erro ao criar dados do usu√°rio:', error);
    return false;
  }
};

// Verificar se usu√°rio √© admin (role = 0)
export const verificarSeEhAdmin = async (uid: string): Promise<boolean> => {
  const role = await buscarRoleUsuario(uid);
  return role === 0;
};

// Verificar se usu√°rio √© user comum (role = 1)
export const verificarSeEhUser = async (uid: string): Promise<boolean> => {
  const role = await buscarRoleUsuario(uid);
  return role === 1;
};